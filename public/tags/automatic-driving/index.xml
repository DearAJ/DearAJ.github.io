<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Automatic Driving on HomePage</title>
    <link>http://localhost:1313/tags/automatic-driving/</link>
    <description>Recent content in Automatic Driving on HomePage</description>
    <generator>Hugo</generator>
    <language>en-US</language>
    <lastBuildDate>Sat, 19 Apr 2025 04:00:59 -0700</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/automatic-driving/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>工具链-carla</title>
      <link>http://localhost:1313/post/%E5%B7%A5%E5%85%B7%E9%93%BE-carla/</link>
      <pubDate>Sat, 19 Apr 2025 04:00:59 -0700</pubDate>
      <guid>http://localhost:1313/post/%E5%B7%A5%E5%85%B7%E9%93%BE-carla/</guid>
      <description>&lt;h2 id=&#34;0-预备&#34;&gt;0 预备&lt;/h2&gt;&#xA;&lt;p&gt;下载 carla&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;﻿﻿﻿Get Python from anaconda.com&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;﻿﻿﻿Create virtual environment&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;﻿﻿launch anaconda prompt&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;﻿﻿conda create &amp;ndash;name carla-sim python=3.7&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;﻿﻿activate carla-sim&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Install additional libraries via &amp;ldquo;pip install&amp;rdquo;:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;﻿﻿pip install carla, pygame, numpy, jupyter and opencv-python&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;h2 id=&#34;1-基本构件块&#34;&gt;1 基本构件块&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# all imports&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; carla &#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;# the sim Library itself &lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; random &#x9;&#x9;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;# to pick random spawn point &lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; cv2 &#x9;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;# to work with images from cameras&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; numpy &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; np &#x9;&lt;span style=&#34;color:#75715e&#34;&gt;# in this example to change image representation - re-shaping&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# connect to the sim&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;client &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; carla&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Client(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;localhost&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2000&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>LSS代码</title>
      <link>http://localhost:1313/post/lss%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0/</link>
      <pubDate>Mon, 14 Apr 2025 04:00:59 -0700</pubDate>
      <guid>http://localhost:1313/post/lss%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0/</guid>
      <description>&lt;p&gt;文章搬运，自用。&lt;/p&gt;&#xA;&lt;p&gt;论文：&lt;a href=&#34;https://arxiv.org/abs/2008.05711&#34;&gt;Lift, Splat, Shoot: Encoding Images From Arbitrary Camera Rigs by Implicitly Unprojecting to 3D&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;官方源码：&lt;a href=&#34;https://github.com/nv-tlabs/lift-splat-shoot&#34;&gt;lift-splat-shoot&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;h4 id=&#34;lift-splat-shoot图像bev安装与模型代码详解httpsblogcsdnnetqq_41366026articledetails133840315&#34;&gt;&lt;a href=&#34;https://blog.csdn.net/qq_41366026/article/details/133840315&#34;&gt;Lift, Splat, Shoot图像BEV安装与模型代码详解&lt;/a&gt;&lt;/h4&gt;&#xA;&lt;p&gt;对于任意数量不同相机帧的图像直接提取场景的BEV表达；主要由三部分实现：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;Lift&lt;/strong&gt;：将每一个相机的图像帧根据相机的内参转换提升到 frustum（锥形）形状的点云空间中。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;splate&lt;/strong&gt;：将所有相机转换到锥形点云空间中的特征根据相机的内参 K 与相机相对于 ego 的外参T映射到栅格化的 3D 空间（BEV）中来融合多帧信息。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;shoot&lt;/strong&gt;：根据上述 BEV 的检测或分割结果来生成规划的路径 proposal；从而实现可解释的端到端的路径规划任务。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;注：LSS在训练的过程中并不需要激光雷达的点云来进行监督。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
