<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Data Processing on HomePage</title>
    <link>http://localhost:1313/tags/data-processing/</link>
    <description>Recent content in Data Processing on HomePage</description>
    <generator>Hugo</generator>
    <language>en-US</language>
    <lastBuildDate>Mon, 14 Apr 2025 04:00:59 -0700</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/data-processing/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>PyTorch</title>
      <link>http://localhost:1313/post/pytorch/</link>
      <pubDate>Mon, 14 Apr 2025 04:00:59 -0700</pubDate>
      <guid>http://localhost:1313/post/pytorch/</guid>
      <description>&lt;h3 id=&#34;1-基础概念&#34;&gt;&lt;strong&gt;1. 基础概念&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;DataLoader&lt;/strong&gt;：包装 &lt;code&gt;Dataset&lt;/code&gt;，提供批量迭代、多线程加载等功能。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Dataset&lt;/strong&gt; (必需)：存储样本及其标签，需实现 &lt;code&gt;__len__&lt;/code&gt; 和 &lt;code&gt;__getitem__&lt;/code&gt; 方法。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;batch_size&lt;/code&gt;&lt;/strong&gt;：每批的样本数。默认值为1。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;shuffle&lt;/code&gt;&lt;/strong&gt;：是否在每个epoch开始时打乱数据（训练集通常设为True，验证集False）。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;num_workers&lt;/code&gt;&lt;/strong&gt;：加载数据的子进程数。默认为0，意味着数据将在主进程中加载。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;drop_last&lt;/code&gt;&lt;/strong&gt;：当样本数不能被batch_size整除时，是否丢弃最后一个不完整的批次。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;sampler&lt;/code&gt; (可选)：定义从数据集中抽取样本的策略。如果指定，则忽略shuffle参数。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;batch_sampler&lt;/code&gt; (可选)：与 sampler 类似，但一次返回一个批次的索引。不能与 batch_size、shuffle 和 sampler 同时使用。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;collate_fn&lt;/code&gt; (可选)：如何将多个数据样本整合成一个批次。通常不需要指定。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;drop_last&lt;/code&gt; (可选)：如果数据集大小不能被批次大小整除，是否丢弃最后一个不完整的批次。默认为False。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;2-创建自定义dataset&#34;&gt;&lt;strong&gt;2. 创建自定义Dataset&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;假设数据是随机生成的张量，实际场景中可能需要从文件读取。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; torch&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; torch.utils.data &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Dataset, DataLoader&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;CustomDataset&lt;/span&gt;(Dataset):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; __init__(self, data, labels):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; data      &lt;span style=&#34;color:#75715e&#34;&gt;# 样本数据（例如图像）&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;labels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; labels  &lt;span style=&#34;color:#75715e&#34;&gt;# 样本标签&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; __len__(self):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; len(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;data)  &lt;span style=&#34;color:#75715e&#34;&gt;# 返回数据总数量&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; __getitem__(self, idx):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# 返回单个样本及其标签（自动组成批次由DataLoader处理）&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;data[idx], self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;labels[idx]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;&#xA;&lt;h3 id=&#34;3-生成示例数据&#34;&gt;&lt;strong&gt;3. 生成示例数据&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 假设有100个样本，每个样本是3通道的32x32图像&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; torch&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;randn(&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 对应的标签是0-9的整数&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;labels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; torch&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;randint(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;, (&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;,))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;&#xA;&lt;h3 id=&#34;4-实例化dataset和dataloader&#34;&gt;&lt;strong&gt;4. 实例化Dataset和DataLoader&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dataset &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; CustomDataset(data, labels)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dataloader &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; DataLoader(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    dataset,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    batch_size&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;,    &lt;span style=&#34;color:#75715e&#34;&gt;# 每批4个样本&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    shuffle&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;,    &lt;span style=&#34;color:#75715e&#34;&gt;# 每个epoch打乱数据&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    num_workers&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,   &lt;span style=&#34;color:#75715e&#34;&gt;# 使用2个子进程加载数据&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;&#xA;&lt;h3 id=&#34;5-遍历dataloader&#34;&gt;&lt;strong&gt;5. 遍历DataLoader&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; batch_data, batch_labels &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; dataloader:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# batch_data形状: [4, 3, 32, 32]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# batch_labels形状: [4]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Batch data shape:&amp;#34;&lt;/span&gt;, batch_data&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Batch labels shape:&amp;#34;&lt;/span&gt;, batch_labels&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# 在此处执行模型训练/验证...&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;&#xA;&lt;h3 id=&#34;6-处理真实数据示例图像分类&#34;&gt;&lt;strong&gt;6. 处理真实数据（示例：图像分类）&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;若处理图像文件，需在 &lt;code&gt;Dataset&lt;/code&gt; 中读取图片并预处理：&lt;/p&gt;</description>
    </item>
    <item>
      <title>脚本使用</title>
      <link>http://localhost:1313/post/dp-%E8%84%9A%E6%9C%AC%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Sat, 12 Apr 2025 04:00:59 -0700</pubDate>
      <guid>http://localhost:1313/post/dp-%E8%84%9A%E6%9C%AC%E4%BD%BF%E7%94%A8/</guid>
      <description>&lt;h4 id=&#34;脚本学习&#34;&gt;脚本学习&lt;/h4&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;python main.py train mini/trainval &amp;ndash;dataroot=NUSCENES_ROOT &amp;ndash;logdir=./runs &amp;ndash;gpuid=0 tensorboard &amp;ndash;logdir=./runs &amp;ndash;bind_all&lt;/p&gt;&#xA;&lt;h4 id=&#34;第一部分python-mainpy-train-minitrainval-&#34;&gt;第一部分：&lt;code&gt;python main.py train mini/trainval ...&lt;/code&gt;&lt;/h4&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python main.py train mini/trainval --dataroot&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;NUSCENES_ROOT --logdir&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;./runs --gpuid&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;参数解析&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;train&lt;/code&gt;：表示执行训练模式。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;mini/trainval&lt;/code&gt;：数据集的子集（如训练集+验证集的迷你版本）。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;--dataroot=NUSCENES_ROOT&lt;/code&gt;：指定数据集路径，需替换&lt;code&gt;NUSCENES_ROOT&lt;/code&gt;为实际路径。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;--logdir=./runs&lt;/code&gt;：训练日志和模型检查点会保存在&lt;code&gt;./runs&lt;/code&gt;目录。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;--gpuid=0&lt;/code&gt;：使用第0号GPU（如果有多块GPU）。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;第二部分：&lt;code&gt;tensorboard --logdir=./runs --bind_all&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tensorboard --logdir&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;./runs --bind_all&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;作用&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;p&gt;启动TensorBoard服务，用于可视化训练过程中的指标（如损失曲线、准确率等）。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;参数解析&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;--logdir=./runs&lt;/code&gt;：指定TensorBoard读取的日志目录（与训练脚本的&lt;code&gt;--logdir&lt;/code&gt;一致）。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;--bind_all&lt;/code&gt;：允许通过网络访问TensorBoard（默认地址通常是&lt;code&gt;localhost:6006&lt;/code&gt;）。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h4 id=&#34;fire-库&#34;&gt;&lt;code&gt;Fire&lt;/code&gt; 库&lt;/h4&gt;&#xA;&lt;p&gt;作用：将Python函数&lt;strong&gt;自动转换为命令行接口&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;命令结构&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python main.py &amp;lt;函数名&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;函数参数&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;--选项&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;值&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&amp;lt;函数名&amp;gt;：必须是 &lt;code&gt;Fire&lt;/code&gt; 字典中的键（如 &lt;code&gt;train&lt;/code&gt;、&lt;code&gt;lidar_check&lt;/code&gt;）。&lt;/li&gt;&#xA;&lt;li&gt;[函数参数]：传递给对应函数的位置参数。&lt;/li&gt;&#xA;&lt;li&gt;[&amp;ndash;选项=值]：对应函数的关键字参数（如 &lt;code&gt;--dataroot&lt;/code&gt;、&lt;code&gt;--logdir&lt;/code&gt;）。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;举例&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python main.py train mini/trainval --dataroot&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;NUSCENES_ROOT --logdir&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;./runs --gpuid&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;train&lt;/code&gt;&lt;/strong&gt;：选择执行 &lt;code&gt;src.train.train&lt;/code&gt; 函数。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;mini/trainval&lt;/code&gt;&lt;/strong&gt;：作为位置参数传递给 &lt;code&gt;src.train.train&lt;/code&gt; 的第一个参数。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;--dataroot&lt;/code&gt;、&lt;code&gt;--logdir&lt;/code&gt;、&lt;code&gt;--gpuid&lt;/code&gt;&lt;/strong&gt;：作为关键字参数传递给 &lt;code&gt;src.train.train&lt;/code&gt;。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>数据集-NuSences</title>
      <link>http://localhost:1313/post/%E6%95%B0%E6%8D%AE%E9%9B%86-nusences/</link>
      <pubDate>Fri, 11 Apr 2025 04:00:59 -0700</pubDate>
      <guid>http://localhost:1313/post/%E6%95%B0%E6%8D%AE%E9%9B%86-nusences/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;h4 id=&#34;内容&#34;&gt;内容&lt;/h4&gt;&#xA;&lt;p&gt;nuScenes 包含 1000 个场景，大约 1.4M 的相机图像、390k LIDAR 扫描、1.4M 雷达扫描和 40k 关键帧中的 1.4M 对象边界框。&lt;/p&gt;&#xA;&lt;p&gt;nuScenes-lidarseg 包含 40000 个点云和 1000 个场景（850 个用于训练和验证的场景，以及 150 个用于测试的场景）中的 14 亿个注释点。&lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;h4 id=&#34;数据采集&#34;&gt;数据采集&lt;/h4&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;车辆设置&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/nuSences/1.png&#34; alt=&#34;1&#34;&gt;&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;1 个旋转激光雷达 （Velodyne HDL32E）&lt;/li&gt;&#xA;&lt;li&gt;5 个远程雷达传感器 （Continental ARS 408-21）&lt;/li&gt;&#xA;&lt;li&gt;6 个相机 （Basler acA1600-60gc）&lt;/li&gt;&#xA;&lt;li&gt;1个 IMU &amp;amp; GPS （高级导航空间版）&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Sensor(传感器)校准 - 内外参&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;LIDAR extrinsics&lt;/li&gt;&#xA;&lt;li&gt;相机 extrinsics&lt;/li&gt;&#xA;&lt;li&gt;RADAR extrinsics&lt;/li&gt;&#xA;&lt;li&gt;相机 intrinsic 校准&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Sensor(传感器)同步&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;实现跨模态数据对齐：当顶部 LIDAR 扫描相机 FOV 的中心时，会触发相机的曝光&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;h4 id=&#34;数据标准&#34;&gt;数据标准&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;nuScenes 数据集中的所有对象都带有一个&lt;strong&gt;语义类别&lt;/strong&gt;，以及一个 &lt;strong&gt;3D 边界框&lt;/strong&gt;和它们所在的&lt;strong&gt;每一帧的属性&lt;/strong&gt;。：&lt;a href=&#34;https://github.com/nutonomy/nuscenes-devkit/blob/master/docs/instructions_nuscenes.md&#34;&gt;类的定义&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;nuScenes-lidarseg 使用&lt;strong&gt;语义标签&lt;/strong&gt;注释激光雷达点云中的每个点：&lt;a href=&#34;https://github.com/nutonomy/nuscenes-devkit/blob/master/docs/instructions_lidarseg.md&#34;&gt;类的定义&lt;/a&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
